{"version":3,"sources":["webpack://lib_mycarlog3/./src/widgets/Login/Login.m.css","webpack://lib_mycarlog3/./src/widgets/Login/Login.ts"],"names":["module","exports"," _key","root","body","wrapper","form-success","container","form","links_block","bg_bubbles","square","__webpack_require__","r","__webpack_exports__","d","Login","_dojo_framework_core_vdom__WEBPACK_IMPORTED_MODULE_0__","_dojo_framework_core_WidgetBase__WEBPACK_IMPORTED_MODULE_1__","_Login_m_css__WEBPACK_IMPORTED_MODULE_2__","_dojo_framework_stores_state_operations__WEBPACK_IMPORTED_MODULE_3__","[object Object]","message","type","console","log","path","apply","window","GlobalStore","Object","document","cookie","classes","action","method","onsubmit","e","target","inputs","getElementsByTagName","i","DataLogin","length","defineProperty","name","value","enumerable","res","fetch","JSON","stringify","headers","Content-Type","data","json","status","login","idaccount","iduser","preferences","username","fullname","rowkey","location","href","this","showSnackBar","undefined","error","preventDefault","placeholder","required"],"mappings":"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","file":"src/widgets/Login/Login.9adbfd5d4e70cb4ccbe5.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"mycarlog3/Login\",\"root\":\"Login-m__root__e9fe791YVXP\",\"body\":\"Login-m__body__e9fe79Z7a8j\",\"wrapper\":\"Login-m__wrapper__e9fe792f8oy\",\"form-success\":\"Login-m__form-success__e9fe793ALq-\",\"container\":\"Login-m__container__e9fe79NQvnb\",\"form\":\"Login-m__form__e9fe79rnNI7\",\"links_block\":\"Login-m__links_block__e9fe79eBLqT\",\"bg_bubbles\":\"Login-m__bg_bubbles__e9fe793ft1S\",\"square\":\"Login-m__square__e9fe792G8Jf\"};","import { v } from \"@dojo/framework/core/vdom\";\nimport WidgetBase from \"@dojo/framework/core/WidgetBase\";\nimport * as css from \"./Login.m.css\";\nimport { add } from \"@dojo/framework/stores/state/operations\";\n\nexport default class Login extends WidgetBase {\n  private showSnackBar(message: string, type: \"error\" | \"success\" | undefined) {\n    console.log(message);\n    var { path, apply } = window.GlobalStore;\n    apply(\n      [\n        add(path(\"root\", \"notifications\"), {\n          message: message,\n          type: type,\n        }),\n      ],\n      true\n    );\n  }\n\n  onAttach() {\n    document.cookie = \"TOKEN_USER= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n    console.log(\"Borrar\");\n  }\n\n  protected render() {\n    return v(\"div\", { classes: [css.root] }, [\n      v(\"div\", { classes: [css.body] }, [\n        v(\"div\", { classes: css.wrapper }, [\n          v(\"div\", { classes: [css.container] }, [\n            v(\"h1\", {}, [\"Login\"]),\n            v(\n              \"form\",\n              {\n                classes: css.form,\n                action: \"/login\",\n                method: \"post\",\n                onsubmit: (e: Event) => {\n                  const { path, apply } = window.GlobalStore;\n\n                  if (e.target) {\n                    let d = e.target as HTMLFormElement;\n                    let inputs = d.getElementsByTagName(\"input\");\n                    let i = 0;\n                    var DataLogin = {};\n\n                    for (i = 0; i < inputs.length; i++) {\n                      Object.defineProperty(DataLogin, inputs[i].name, {\n                        value: inputs[i].value,\n                        enumerable: true,\n                      });\n                      if (i + 1 == inputs.length) {\n                        (async () => {\n                          try {\n                            let res = await fetch(\"/login\", {\n                              method: \"POST\",\n                              body: JSON.stringify(DataLogin),\n                              headers: { \"Content-Type\": \"application/json\" },\n                            });\n                            var data = await res.json();\n                            console.log(data);\n                            if (res.status == 200) {\n                              if (!data.login) {\n                                // this.SnackBar(data.message);\n                              } else {\n                                apply(\n                                  [\n                                    add(\n                                      path(\"root\", \"user\", \"idaccount\"),\n                                      data.idaccount\n                                    ),\n                                  ],\n                                  true\n                                );\n                                apply(\n                                  [\n                                    add(\n                                      path(\"root\", \"user\", \"iduser\"),\n                                      data.iduser\n                                    ),\n                                  ],\n                                  true\n                                );\n                                apply(\n                                  [\n                                    add(\n                                      path(\"root\", \"user\", \"preferences\"),\n                                      data.preferences\n                                    ),\n                                  ],\n                                  true\n                                );\n                                apply(\n                                  [\n                                    add(\n                                      path(\"root\", \"user\", \"username\"),\n                                      data.username\n                                    ),\n                                  ],\n                                  true\n                                );\n                                apply(\n                                  [\n                                    add(\n                                      path(\"root\", \"user\", \"fullname\"),\n                                      data.fullname\n                                    ),\n                                  ],\n                                  true\n                                );\n                                apply(\n                                  [\n                                    add(\n                                      path(\"root\", \"user\", \"rowkey\"),\n                                      data.rowkey\n                                    ),\n                                  ],\n                                  true\n                                );\n\n                                window.location.href = \"/#home\";\n                              }\n                            } else {\n                              this.showSnackBar(\"Algo sali√≥ mal\", undefined);\n                            }\n                          } catch (error) {\n                            this.showSnackBar(error, \"error\");\n                          }\n                        })();\n                      }\n                    }\n                  }\n\n                  e.preventDefault();\n                },\n              },\n              [\n                //v('input', {classes: [css.input], name: 'account',  type: 'text', placeholder: 'Cuenta'}, []),\n                v(\n                  \"input\",\n                  {\n                    name: \"username\",\n                    type: \"text\",\n                    placeholder: \"Usuario\",\n                    required: \"required\",\n                  },\n                  []\n                ),\n                v(\n                  \"input\",\n                  {\n                    name: \"pwd\",\n                    type: \"password\",\n                    placeholder: \"Contrase√±a\",\n                    required: \"required\",\n                  },\n                  []\n                ),\n                v(\"input\", {\n                  type: \"submit\",\n                  name: \"submit\",\n                  value: \"Aceptar\",\n                }),\n                v(\"div\", { classes: css.links_block }, [\n                  v(\"a\", { href: \"/#register\" }, [\"Registro\"]),\n                ]),\n              ]\n            ),\n          ]),\n          // w(SBar, {\n          //   open: this._openSnack,\n          //   leading: false,\n          //   type: \"error\",\n          //   messageRenderer: () => this._MsgSnackBar,\n          // }),\n        ]),\n      ]),\n      v(\"ul\", { classes: css.bg_bubbles }, [\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n        v(\"li\"),\n      ]),\n    ]);\n  }\n}\n"],"sourceRoot":""}