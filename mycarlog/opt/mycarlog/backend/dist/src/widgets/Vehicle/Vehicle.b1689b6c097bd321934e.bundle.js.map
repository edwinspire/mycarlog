{"version":3,"sources":["webpack://lib_mycarlog3/./src/widgets/Vehicle/Vehicle.m.css","webpack://lib_mycarlog3/./src/widgets/SelectRemoteSource/SelectRemoteSource.m.css","webpack://lib_mycarlog3/./src/widgets/TextArea/TextArea.ts","webpack://lib_mycarlog3/./src/widgets/SelectRemoteSource/SelectRemoteSource.ts","webpack://lib_mycarlog3/./src/widgets/Input/Input.ts","webpack://lib_mycarlog3/./src/widgets/Vehicle/Vehicle.ts"],"names":["module","exports"," _key","spacing","full_width","TextArea_Textarea","WidgetBase","[object Object]","Object","vdom","classes","this","properties","label","rows","cols","required","placeholder","value","onchange","e","onValue","target","console","log","SelectRemoteSource_SelectRemoteSource","RemoteOptions","Options","f","fetch","url","method","body","JSON","stringify","params","headers","Content-Type","status","d","json","forEach","option","index","push","invalidate","length","window","location","href","SelectRemoteSource_m","Input_Input","max","min","type","Vehicle_Vehicle","Params","idvehicle","idaccount","idcontact","rowkey","license_plate","year","fuel_tank_capacity","idfuel_tank_capacitytype","vin","idvehicletype","idmark","model","color","idfueltype","idunit_measure_fuel_tank","note","msg","Number","resp","data","SnackBar","GlobalStore","get","path","paramsString","hash","split","searchParams","URLSearchParams","res","Menu","ToolBar","title","ShowNew","ShowSave","onSave","Save","onNew","Vehicle_m","v","tslib_es6","watch"],"mappings":"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","file":"src/widgets/Vehicle/Vehicle.b1689b6c097bd321934e.bundle.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"mycarlog3/Vehicle\",\"spacing\":\"Vehicle-m__spacing__e9fe791z0jY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\" _key\":\"mycarlog3/SelectRemoteSource\",\"full_width\":\"SelectRemoteSource-m__full_width__e9fe791RePL\"};","import { v } from \"@dojo/framework/core/vdom\";\nimport WidgetBase from \"@dojo/framework/core/WidgetBase\";\n\nexport interface TextareaProperties {\n  label?: string;\n  value?: string;\n  rows?: number;\n  cols?: number;\n  required?: boolean;\n  placeholder?: string;\n  onValue?(value: any): void;\n}\n\nexport default class Textarea extends WidgetBase<TextareaProperties> {\n  protected render() {\n    return v(\"span\", {}, [\n      v(\"div\", { classes: [\"field\"] }, [\n        v(\"label\", { classes: [\"label\", \"is-small\"] }, [this.properties.label]),\n        v(\"div\", { classes: [\"control\"] }, [\n          v(\n            \"textarea\",\n            {\n              rows: this.properties.rows,\n              cols: this.properties.cols,\n              required: this.properties.required,\n              placeholder: this.properties.placeholder,\n              classes: [\"textarea\", \"is-small\"],\n              value: this.properties.value,\n              onchange: (e) => {\n                this.properties.onValue &&\n                  this.properties.onValue(e.target.value);\n                console.log(\"Click\");\n              },\n            },\n            [this.properties.value]\n          ),\n        ]),\n      ]),\n    ]);\n  }\n}\n","import { v } from \"@dojo/framework/core/vdom\";\nimport WidgetBase from \"@dojo/framework/core/WidgetBase\";\nimport * as css from \"./SelectRemoteSource.m.css\";\n\nexport interface SelectRemoteSourceProperties {\n  url: string;\n  label: string;\n  value?: string;\n  params?: any;\n  required?: boolean;\n  onValue?(Value: any): void;\n}\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n  disabled: boolean;\n}\n\nexport default class SelectRemoteSource extends WidgetBase<\n  SelectRemoteSourceProperties\n> {\n  private RemoteOptions: SelectOption[] = [];\n  private Options: any[] = [];\n\n  public async onAttach() {\n    try {\n      let f = await fetch(this.properties.url, {\n        method: \"POST\",\n        body: JSON.stringify(this.properties.params),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      if (f.status == 200) {\n        let d = await f.json();\n        this.RemoteOptions = d as SelectOption[];\n        this.Options = [];\n        await this.RemoteOptions.forEach((option, index) => {\n          this.Options.push(\n            v(\"option\", { value: option.value }, [option.label])\n          );\n          this.invalidate();\n        });\n\n        console.log(\"Opciones\", this.Options.length);\n      } else if (f.status == 401) {\n        window.location.href = \"/#login\";\n      }\n    } catch (e) {\n      console.log(e);\n      this.invalidate();\n    }\n  }\n\n  protected render() {\n    return v(\"span\", {}, [\n      v(\"div\", { classes: [\"field\"] }, [\n        v(\"label\", { classes: [\"label\", \"is-small\"] }, [this.properties.label]),\n        v(\"div\", { classes: [\"control\", \"is-small\"] }, [\n          v(\"div\", { classes: [\"select is-small\", css.full_width] }, [\n            v(\n              \"select\",\n              {\n                required: this.properties.required,\n                onchange: (e) => {\n                  this.properties.onValue &&\n                    this.properties.onValue(e.target.value as any);\n                  console.log(\"Click\", e.target, e);\n                },\n              },\n              this.Options \n            ),\n          ]),\n        ]),\n      ]),\n    ]);\n  }\n}\n","import { v } from \"@dojo/framework/core/vdom\";\nimport WidgetBase from \"@dojo/framework/core/WidgetBase\";\n\nexport interface InputProperties {\n  label?: string;\n  value?: string;\n  type?:\n    | \"button\"\n    | \"checkbox\"\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"file\"\n    | \"hidden\"\n    | \"image\"\n    | \"month\"\n    | \"number\"\n    | \"password\"\n    | \"radio\"\n    | \"range\"\n    | \"reset\"\n    | \"search\"\n    | \"submit\"\n    | \"tel\"\n    | \"text\"\n    | \"time\"\n    | \"url\"\n    | \"week\";\n  placeholder?: string;\n  required?: boolean;\n  max?: number | Date;\n  min?: number | Date;\n  onValue?(value: any): void;\n}\n\nexport default class Input extends WidgetBase<InputProperties> {\n  protected render() {\n    return v(\"span\", {}, [\n      v(\"div\", { classes: [\"field\"] }, [\n        v(\"label\", { classes: [\"label\", \"is-small\"] }, [this.properties.label]),\n        v(\"div\", { classes: [\"control\", \"is-small\"] }, [\n          v(\"input\", {\n            max: this.properties.max,\n            min: this.properties.min,\n            required: this.properties.required,\n            value: this.properties.value,\n            placeholder: this.properties.placeholder || \"\",\n            type: this.properties.type || \"text\",\n            classes: [\"input\", \"is-small\"],\n            onchange: (e) => {\n              console.log(e);\n              this.properties.onValue &&\n                this.properties.onValue(e.target.value);\n            },\n          }),\n        ]),\n      ]),\n    ]);\n  }\n}\n","import { v, w } from \"@dojo/framework/core/vdom\";\nimport WidgetBase from \"@dojo/framework/core/WidgetBase\";\nimport * as css from \"../Vehicle/Vehicle.m.css\";\nimport Textarea from \"../TextArea/TextArea\";\nimport Select from \"../SelectRemoteSource/SelectRemoteSource\";\nimport watch from \"@dojo/framework/core/decorators/watch\";\nimport Menu from \".././Menu/Menu\";\nimport Input from \".././Input/Input\";\nimport ToolBar from \"../../widgets/ToolBar/ToolBar\";\n\nexport interface VehicleProperties {\n  idvehicle?: string;\n}\n\nexport default class Vehicle extends WidgetBase<VehicleProperties> {\n  @watch() private Params = {\n    idvehicle: \"-1\",\n    idaccount: 0,\n    idcontact: \"0\",\n    rowkey: 0,\n    license_plate: \"\",\n    year: \"\",\n    fuel_tank_capacity: \"\",\n    idfuel_tank_capacitytype: \"0\",\n    vin: \"\",\n    idvehicletype: \"0\",\n    idmark: \"0\",\n    model: \"\",\n    color: \"0\",\n    idfueltype: \"0\",\n    idunit_measure_fuel_tank: \"0\",\n    note: \"\",\n  };\n\n  //@watch() private _openSnack = false;\n  //private _MsgSnackBar = \"-\";\n\n  private SnackBar(msg: string) {\n    /* console.log(\"SnackBar \" + msg);\n    this._openSnack = true;\n    this._MsgSnackBar = msg;\n    this.invalidate();\n    setTimeout(() => {\n      this._openSnack = false;\n      this.invalidate();\n    }, 4000); */\n  }\n\n  private async Save() {\n    console.log(this.Params);\n    if (Number(this.Params.idcontact) > 0) {\n      if (this.Params.license_plate.length > 0) {\n        let resp = await fetch(\"/vehicle_cu\", {\n          method: \"POST\",\n          body: JSON.stringify(this.Params),\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n        let data = await resp.json();\n        if (resp.status == 200) {\n          console.log(data);\n          if (data.idvehicle > 0) {\n            window.location.href =\n              \"/#vehicles?idvehicle=\" +\n              data.idvehicle +\n              \"&idaccount=\" +\n              this.Params.idaccount;\n          } else {\n            this.SnackBar(\"No se pudo guardar\");\n          }\n        } else if (resp.status == 401) {\n          window.location.href = \"/#login\";\n        } else {\n          this.SnackBar(\"No se pudo guardar \" + resp.status);\n        }\n      } else {\n        this.SnackBar(\"Complete los campos que son requeridos\");\n      }\n    } else {\n      this.SnackBar(\"Debe seleccionar un Propietario\");\n    }\n\n    this.invalidate();\n  }\n\n  async onAttach() {\n    console.log(this.properties.idvehicle);\n\n    this.Params.idaccount = window.GlobalStore.get(\n      window.GlobalStore.path(\"root\", \"user\", \"idaccount\")\n    );\n\n    if (this.properties.idvehicle) {\n      var paramsString = window.location.hash.split(\"?\")[1];\n      var searchParams = new URLSearchParams(paramsString);\n      this.Params.idvehicle = searchParams.get(\"idvehicle\") || \"-2\";\n      var url =\n        \"/vehicle?idvehicle=\" +\n        this.Params.idvehicle +\n        \"&idaccount=\" +\n        this.Params.idaccount;\n\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      let data = await res.json();\n      console.log(data);\n      if (data.length > 0 && data[0].idaccount && data[0].idvehicle) {\n        this.Params = data[0];\n        this.invalidate();\n      }\n      //console.log(data);\n    }\n  }\n\n  protected render() {\n    return v(\"div\", {}, [\n      w(Menu, {}),\n      w(ToolBar, {\n        title: \"VEHÍCULO\",\n        ShowNew: true,\n        ShowSave: true,\n        onSave: () => {\n          this.Save();\n        },\n        onNew: () => {\n          this.Params = {\n            idaccount: this.Params.idaccount,\n            idvehicle: \"-1\",\n            idcontact: \"0\",\n            rowkey: 0,\n            license_plate: \"\",\n            year: \"\",\n            fuel_tank_capacity: \"\",\n            idfuel_tank_capacitytype: \"0\",\n            vin: \"\",\n            idvehicletype: \"0\",\n            idmark: \"0\",\n            model: \"\",\n            color: \"\",\n            idfueltype: \"0\",\n            idunit_measure_fuel_tank: \"0\",\n            note: \"\",\n          };\n        },\n      }),\n      v(\"div\", { classes: [] }, [\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Select, {\n              label: \"Propietario\",\n              url: \"/toselect/contacts\",\n              onValue: (value) => {\n                console.log(\"onSelect\", value);\n                this.Params.idcontact = value;\n              },\n            }),\n          ]),\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Input, {\n              label: \"Placa\",\n              onValue: (d) => {\n                this.Params.license_plate = d as string;\n                this.invalidate();\n              },\n            }),\n          ]),\n        ]),\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Select, {\n              label: \"Marca\",\n              value: this.Params.idmark,\n              url: \"/toselect/marks\",\n              onValue: (value) => {\n                console.log(\"onSelect\", value);\n                this.Params.idmark = value;\n              },\n            }),\n          ]),\n          v(\"div\", { classes: [\"column\"] }, [\n            w(\n              Input,\n              {\n                label: \"Modelo\",\n                value: this.Params.model,\n                onValue: (value) => {\n                  this.Params.model = value;\n                },\n              },\n              []\n            ),\n          ]),\n        ]),\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Input, {\n              label: \"Año\",\n              type: 'number',\n              value: this.Params.year as any,\n              onValue: (v) => {\n                this.Params.year = v as string;\n                this.invalidate();\n              },\n            }),\n          ]),\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Input, {\n              label: \"VIN\",\n              value: this.Params.vin as any,\n              onValue: (v) => {\n                this.Params.vin = v as string;\n                this.invalidate();\n              },\n            }),\n          ]),\n        ]),\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Input, {\n              label: \"Color\",\n              type: \"color\",\n              value: this.Params.color,\n              onValue: (value) => {\n                this.Params.color = value;\n              },\n            }),\n          ]),\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Select, {\n              label: \"Tipo de combustible\",\n              url: \"/toselect/fueltypes\",\n              value: this.Params.idfueltype,\n              onValue: (value) => {\n                console.log(\"onSelect\", value);\n                this.Params.idfueltype = value;\n              },\n            }),\n          ]),\n        ]),\n\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, [\n            w(Input, {\n              label: \"Capacidad Tanque\",\n              type: 'number',\n              value: this.Params.fuel_tank_capacity as any,\n              onValue: (v) => {\n                this.Params.fuel_tank_capacity = v as string;\n\n                console.log(this.Params.fuel_tank_capacity);\n\n                this.invalidate();\n              },\n            }),\n          ]),\n          v(\"div\", { classes: [\"column\"] }, [\n            w(\n              Select,\n              {\n                label: \"Unidad de medida del tanque\",\n                url: \"/toselect/unit_measure_fuel_tanks\",\n                value: this.Params.idunit_measure_fuel_tank,\n                onValue: (value) => {\n                  console.log(\"onSelect\", value);\n                  this.Params.idunit_measure_fuel_tank = value;\n                },\n              },\n              []\n            ),\n          ]),\n        ]),\n        /*\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, []),\n          v(\"div\", { classes: [\"column\"] }, []),\n        ]),\n\n        v(\"div\", { classes: [\"columns is-mobile\", css.spacing] }, [\n          v(\"div\", { classes: [\"column\"] }, []),\n          v(\"div\", { classes: [\"column\"] }, []),\n        ]),\n*/\n        v(\"div\", { classes: [\"\"] }, [\n          w(Textarea, {\n            label: \"Notas\",\n            rows: 5, \n            value: this.Params.note,\n            onValue: (value: string) => {\n              this.Params.note = value;\n              this.invalidate();\n            },\n          }),\n        ]),\n      ]),\n    ]);\n  }\n}\n"],"sourceRoot":""}