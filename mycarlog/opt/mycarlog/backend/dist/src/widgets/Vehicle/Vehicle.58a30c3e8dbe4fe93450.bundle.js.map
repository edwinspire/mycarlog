{"version":3,"sources":["webpack://lib_mycarlog3/./node_modules/@dojo/widgets/theme/default/text-area.m.css.js","webpack://lib_mycarlog3/index.tsx","webpack://lib_mycarlog3/./src/widgets/Vehicle/Vehicle.ts"],"names":["__webpack_require__","module","exports"," _key","root","wrapper","input","inputWrapper","disabled","focused","readonly","required","invalid","valid","text_area","Object","vdom","icache","middleware_icache","theme","middleware_theme","focus","middleware_focus","validity","middleware_validity","properties","children","factory","id","middleware","themeCss","classes","text_area_m_css","callOnValidate","message","previousMessage","previousValid","onValidate","aria","columns","widgetId","maxLength","minLength","name","placeholder","readOnly","rows","initialValue","wrapText","themeProp","labelHidden","helperText","value","undefined","get","set","customValidator","dirty","getOrSet","customValid","validate","getValidity","computedHelperText","inputFocused","isFocused","label","key","variant","widgets_label","compose","label_m_css","hidden","forId","active","assign","util","cols","shouldFocus","aria-invalid","maxlength","minlength","aria-readonly","wrap","onblur","onBlur","onfocus","onFocus","oninput","event","onValue","stopPropagation","target","onkeydown","onKeyDown","which","preventDefault","onkeyup","onKeyUp","onclick","onClick","onpointerenter","onOver","onpointerleave","onOut","helper_text","text","Vehicle_Vehicle","WidgetBase","[object Object]","this","Params","idvehicle","idaccount","idcontact","rowkey","license_plate","year","fuel_tank_capacity","idfuel_tank_capacitytype","vin","idvehicletype","idmark","idmodel","idcolor","idfueltype","idunit_measure_fuel_tank","note","msg","Number","length","resp","fetch","method","body","JSON","stringify","headers","Content-Type","data","json","status","console","log","window","location","href","SnackBar","invalidate","GlobalStore","path","paramsString","hash","split","searchParams","URLSearchParams","url","res","ToolBar","title","ShowNew","ShowSave","onSave","Save","onNew","text_input","type","d","v","tslib_es6","watch"],"mappings":"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","file":"src/widgets/Vehicle/Vehicle.58a30c3e8dbe4fe93450.bundle.js","sourcesContent":["require('/home/edwinspire/Documentos/Desarrollo/mycarlog/mycarlog/opt/mycarlog/frontend/node_modules/@dojo/widgets/theme/default/text-area.m.css');\nmodule.exports = {\" _key\":\"@dojo/widgets/text-area\",\"root\":\"text-area-m__root__1NUZh\",\"wrapper\":\"text-area-m__wrapper__1Nkrq\",\"input\":\"text-area-m__input__3libn\",\"inputWrapper\":\"text-area-m__inputWrapper__1LN1m\",\"disabled\":\"text-area-m__disabled__BN85r\",\"focused\":\"text-area-m__focused__1Pb_L\",\"readonly\":\"text-area-m__readonly__21ZTb\",\"required\":\"text-area-m__required__1NXja\",\"invalid\":\"text-area-m__invalid__2jMTq\",\"valid\":\"text-area-m__valid__3mRCW\"};;","import { create, tsx } from '@dojo/framework/core/vdom';\nimport Label from '../label/index';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/default/text-area.m.css';\nimport * as labelCss from '../theme/default/label.m.css';\nimport HelperText from '../helper-text/index';\nimport { createICacheMiddleware } from '@dojo/framework/core/middleware/icache';\nimport theme from '../middleware/theme';\nimport focus from '@dojo/framework/core/middleware/focus';\nimport validity from '@dojo/framework/core/middleware/validity';\nimport { RenderResult } from '@dojo/framework/core/interfaces';\n\nexport interface TextAreaProperties {\n\t/** Custom aria attributes */\n\taria?: { [key: string]: string | null };\n\t/** Number of columns, controls the width of the textarea */\n\tcolumns?: number;\n\t/** Custom validator used to validate the contents of the TextArea */\n\tcustomValidator?: (value: string) => { valid?: boolean; message?: string } | void;\n\t/** Set the disabled property of the control */\n\tdisabled?: boolean;\n\t/** Renders helper text to the user */\n\thelperText?: string;\n\t/** Hides the label from view while still remaining accessible for screen readers */\n\tlabelHidden?: boolean;\n\t/** Maximum number of characters allowed in the input */\n\tmaxLength?: number | string;\n\t/** Minimum number of characters allowed in the input */\n\tminLength?: number | string;\n\t/** The name of the field */\n\tname?: string;\n\n\t/** Handler for when the element is blurred */\n\tonBlur?(): void;\n\n\t/** Handler of when the element is clicked */\n\tonClick?(): void;\n\n\t/** Handler for when the element is focused */\n\tonFocus?(): void;\n\n\t/** Handler for when a key is depressed in the element */\n\tonKeyDown?(key: number, preventDefault: () => void): void;\n\n\t/** Handler for when a key is released in the element */\n\tonKeyUp?(key: number, preventDefault: () => void): void;\n\n\t/** Handler for when the pointer moves out of the element */\n\tonOut?(): void;\n\n\t/** Handler for when the pointer moves over the element */\n\tonOver?(): void;\n\n\t/** Called when TextArea's state is validated */\n\tonValidate?: (valid: boolean | undefined, message: string) => void;\n\n\t/** Handler for when the value of the widget changes */\n\tonValue?(value?: string): void;\n\n\t/** Placeholder text displayed in an empty TextArea */\n\tplaceholder?: string;\n\t/** Makes the field readonly (it may be focused but not changed) */\n\treadOnly?: boolean;\n\t/** Sets the input as required to complete the form */\n\trequired?: boolean;\n\t/** Number of rows, controls the height of the textarea */\n\trows?: number;\n\t/** If the field is valid and optionally display a message */\n\tvalid?: { valid?: boolean; message?: string } | boolean;\n\t/** The initial value */\n\tinitialValue?: string;\n\t/** Controlled value property */\n\tvalue?: string;\n\t/** The id used for the form input element */\n\twidgetId?: string;\n\t/** Controls text wrapping. Can be \"hard\", \"soft\", or \"off\" */\n\twrapText?: 'hard' | 'soft' | 'off';\n}\n\nexport interface TextAreaICache {\n\tdirty: boolean;\n\tvalue?: string;\n\tinitialValue?: string;\n}\n\nconst factory = create({\n\ticache: createICacheMiddleware<TextAreaICache>(),\n\ttheme,\n\tfocus,\n\tvalidity\n})\n\t.properties<TextAreaProperties>()\n\t.children<RenderResult | undefined>();\nexport const TextArea = factory(function TextArea({\n\tid,\n\tmiddleware: { icache, theme, focus, validity },\n\tproperties,\n\tchildren\n}) {\n\tconst themeCss = theme.classes(css);\n\n\tfunction callOnValidate(valid: boolean | undefined, message: string) {\n\t\tlet { valid: previousValid, onValidate } = properties();\n\t\tlet previousMessage: string | undefined;\n\n\t\tif (typeof previousValid === 'object') {\n\t\t\tpreviousMessage = previousValid.message;\n\t\t\tpreviousValid = previousValid.valid;\n\t\t}\n\n\t\tif (valid !== previousValid || message !== previousMessage) {\n\t\t\tonValidate && onValidate(valid, message);\n\t\t}\n\t}\n\n\tfunction validate() {\n\t\tconst { customValidator, value = icache.get('value') || '' } = properties();\n\t\tconst dirty = icache.getOrSet('dirty', false);\n\n\t\tif (value === '' && !dirty) {\n\t\t\tcallOnValidate(undefined, '');\n\t\t\treturn;\n\t\t}\n\n\t\ticache.set('dirty', true);\n\n\t\tlet { valid, message = '' } = validity.get('input', value || '');\n\t\tif (valid && customValidator) {\n\t\t\tconst customValid = customValidator(value);\n\t\t\tif (customValid) {\n\t\t\t\tvalid = customValid.valid;\n\t\t\t\tmessage = customValid.message || '';\n\t\t\t}\n\t\t}\n\n\t\tcallOnValidate(valid, message);\n\t}\n\n\tfunction getValidity() {\n\t\tconst { valid = { valid: undefined, message: undefined } } = properties();\n\n\t\tif (typeof valid === 'boolean') {\n\t\t\treturn { valid, message: undefined };\n\t\t}\n\n\t\treturn {\n\t\t\tvalid: valid.valid,\n\t\t\tmessage: valid.message\n\t\t};\n\t}\n\n\tconst {\n\t\taria = {},\n\t\tcolumns = 20,\n\t\tdisabled,\n\t\twidgetId = `textarea-${id}`,\n\t\tmaxLength,\n\t\tminLength,\n\t\tname,\n\t\tplaceholder,\n\t\treadOnly,\n\t\trequired,\n\t\trows = 2,\n\t\tinitialValue,\n\t\twrapText,\n\t\ttheme: themeProp,\n\t\tclasses,\n\t\tlabelHidden,\n\t\thelperText,\n\t\tonValidate\n\t} = properties();\n\n\tlet { value } = properties();\n\n\tif (value === undefined) {\n\t\tvalue = icache.get('value');\n\t\tconst existingInitialValue = icache.get('initialValue');\n\n\t\tif (initialValue !== existingInitialValue) {\n\t\t\ticache.set('value', initialValue);\n\t\t\ticache.set('initialValue', initialValue);\n\t\t\tvalue = initialValue;\n\t\t}\n\t}\n\n\tonValidate && validate();\n\tconst { valid, message } = getValidity();\n\n\tconst computedHelperText = (valid === false && message) || helperText;\n\tconst inputFocused = focus.isFocused('input');\n\tconst [label] = children();\n\n\treturn (\n\t\t<div key=\"root\" classes={[theme.variant(), themeCss.root]}>\n\t\t\t<div\n\t\t\t\tkey=\"wrapper\"\n\t\t\t\tclasses={[\n\t\t\t\t\tthemeCss.wrapper,\n\t\t\t\t\tdisabled ? themeCss.disabled : null,\n\t\t\t\t\tvalid === false ? themeCss.invalid : null,\n\t\t\t\t\tvalid === true ? themeCss.valid : null,\n\t\t\t\t\treadOnly ? themeCss.readonly : null,\n\t\t\t\t\trequired ? themeCss.required : null,\n\t\t\t\t\tinputFocused ? themeCss.focused : null\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{label ? (\n\t\t\t\t\t<Label\n\t\t\t\t\t\ttheme={theme.compose(\n\t\t\t\t\t\t\tlabelCss,\n\t\t\t\t\t\t\tcss,\n\t\t\t\t\t\t\t'label'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tvalid={valid}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\trequired={required}\n\t\t\t\t\t\thidden={labelHidden}\n\t\t\t\t\t\tforId={widgetId}\n\t\t\t\t\t\tfocused={inputFocused}\n\t\t\t\t\t\tactive={!!value || inputFocused}\n\t\t\t\t\t>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Label>\n\t\t\t\t) : null}\n\t\t\t\t<div classes={themeCss.inputWrapper}>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tid={widgetId}\n\t\t\t\t\t\tkey=\"input\"\n\t\t\t\t\t\t{...formatAriaProperties(aria)}\n\t\t\t\t\t\tclasses={themeCss.input}\n\t\t\t\t\t\tcols={`${columns}`}\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tfocus={focus.shouldFocus}\n\t\t\t\t\t\taria-invalid={valid === false ? 'true' : null}\n\t\t\t\t\t\tmaxlength={maxLength ? `${maxLength}` : null}\n\t\t\t\t\t\tminlength={minLength ? `${minLength}` : null}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\taria-readonly={readOnly ? 'true' : null}\n\t\t\t\t\t\trequired={required}\n\t\t\t\t\t\trows={`${rows}`}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\twrap={wrapText}\n\t\t\t\t\t\tonblur={() => {\n\t\t\t\t\t\t\tconst { onBlur } = properties();\n\t\t\t\t\t\t\tonBlur && onBlur();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonfocus={() => {\n\t\t\t\t\t\t\tconst { onFocus } = properties();\n\t\t\t\t\t\t\tonFocus && onFocus();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\toninput={(event: Event) => {\n\t\t\t\t\t\t\tconst { onValue } = properties();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tconst value = (event.target as HTMLInputElement).value;\n\t\t\t\t\t\t\ticache.set('value', value);\n\t\t\t\t\t\t\tonValue && onValue(value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonkeydown={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\tconst { onKeyDown } = properties();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tonKeyDown &&\n\t\t\t\t\t\t\t\tonKeyDown(event.which, () => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonkeyup={(event: KeyboardEvent) => {\n\t\t\t\t\t\t\tconst { onKeyUp } = properties();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tonKeyUp &&\n\t\t\t\t\t\t\t\tonKeyUp(event.which, () => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonclick={() => {\n\t\t\t\t\t\t\tconst { onClick } = properties();\n\t\t\t\t\t\t\tonClick && onClick();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonpointerenter={() => {\n\t\t\t\t\t\t\tconst { onOver } = properties();\n\t\t\t\t\t\t\tonOver && onOver();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonpointerleave={() => {\n\t\t\t\t\t\t\tconst { onOut } = properties();\n\t\t\t\t\t\t\tonOut && onOut();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<HelperText\n\t\t\t\ttext={computedHelperText}\n\t\t\t\tvalid={valid}\n\t\t\t\tclasses={classes}\n\t\t\t\ttheme={themeProp}\n\t\t\t/>\n\t\t</div>\n\t);\n});\n\nexport default TextArea;\n","import { v, w } from \"@dojo/framework/core/vdom\";\nimport WidgetBase from \"@dojo/framework/core/WidgetBase\";\n//import * as css from \"../styles/Vehicle.m.css\";\n//import * as cssProfile from \"../styles/Profile.m.css\";\nimport TextInput from \"@dojo/widgets/text-input\";\n//import Checkbox, { Mode } from \"@dojo/widgets/checkbox\";\nimport Textarea from \"@dojo/widgets/text-area\";\n//import SelectFromURL from \"./SelectFromURL\";\n//import SBar from \"@dojo/widgets/snackbar\";\nimport watch from \"@dojo/framework/core/decorators/watch\";\n//import Icon from \".././Icon/Icon\";\n// import UserPreferences, {\n//   UserPreferencesProperties,\n// } from \".././UserPreferences/UserPreferences\";\nimport ToolBar from \"../../widgets/ToolBar/ToolBar\";\n\nexport interface VehicleProperties {\n  idvehicle?: string;\n}\n\nexport default class Vehicle extends WidgetBase<VehicleProperties> {\n  @watch() private Params = {\n    idvehicle: \"-1\",\n    idaccount: 0,\n    idcontact: \"0\",\n    rowkey: 0,\n    license_plate: \"\",\n    year: \"\",\n    fuel_tank_capacity: \"\",\n    idfuel_tank_capacitytype: \"0\",\n    vin: \"\",\n    idvehicletype: \"0\",\n    idmark: \"0\",\n    idmodel: \"0\",\n    idcolor: \"0\",\n    idfueltype: \"0\",\n    idunit_measure_fuel_tank: \"0\",\n    note: \"\",\n  };\n\n  //@watch() private _openSnack = false;\n  //private _MsgSnackBar = \"-\";\n\n  private SnackBar(msg: string) {\n    /* console.log(\"SnackBar \" + msg);\n    this._openSnack = true;\n    this._MsgSnackBar = msg;\n    this.invalidate();\n    setTimeout(() => {\n      this._openSnack = false;\n      this.invalidate();\n    }, 4000); */\n  }\n\n  private async Save() {\n    if (Number(this.Params.idcontact) > 0) {\n      if (this.Params.license_plate.length > 0) {\n        let resp = await fetch(\"/vehicle_cu\", {\n          method: \"POST\",\n          body: JSON.stringify(this.Params),\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n        let data = await resp.json();\n        if (resp.status == 200) {\n          console.log(data);\n          if (data.idvehicle > 0) {\n            window.location.href =\n              \"/#vehicles?idvehicle=\" +\n              data.idvehicle +\n              \"&idaccount=\" +\n              this.Params.idaccount;\n          } else {\n            this.SnackBar(\"No se pudo guardar\");\n          }\n        } else if (resp.status == 401) {\n          window.location.href = \"/#login\";\n        } else {\n          this.SnackBar(\"No se pudo guardar \" + resp.status);\n        }\n      } else {\n        this.SnackBar(\"Complete los campos que son requeridos\");\n      }\n    } else {\n      this.SnackBar(\"Debe seleccionar un Propietario\");\n    }\n\n    this.invalidate();\n  }\n\n  async onAttach() {\n    console.log(this.properties.idvehicle);\n\n    this.Params.idaccount = window.GlobalStore.get(\n      window.GlobalStore.path(\"root\", \"user\", \"idaccount\")\n    );\n\n    if (this.properties.idvehicle) {\n      var paramsString = window.location.hash.split(\"?\")[1];\n      var searchParams = new URLSearchParams(paramsString);\n      this.Params.idvehicle = searchParams.get(\"idvehicle\") || \"-2\";\n      var url =\n        \"/vehicle?idvehicle=\" +\n        this.Params.idvehicle +\n        \"&idaccount=\" +\n        this.Params.idaccount;\n\n      const res = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      let data = await res.json();\n      console.log(data);\n      if (data.length > 0 && data[0].idaccount && data[0].idvehicle) {\n        this.Params = data[0];\n        this.invalidate();\n      }\n      //console.log(data);\n    }\n  }\n\n  protected render() {\n    return v(\"div\", {}, [\n      w(ToolBar, {\n        title: \"VEHÍCULO\",\n        ShowNew: true,\n        ShowSave: true,\n        onSave: () => {\n          this.Save();\n        },\n        onNew: () => {\n          this.Params = {\n            idaccount: this.Params.idaccount,\n            idvehicle: \"-1\",\n            idcontact: \"0\",\n            rowkey: 0,\n            license_plate: \"\",\n            year: \"\",\n            fuel_tank_capacity: \"\",\n            idfuel_tank_capacitytype: \"0\",\n            vin: \"\",\n            idvehicletype: \"0\",\n            idmark: \"0\",\n            idmodel: \"0\",\n            idcolor: \"0\",\n            idfueltype: \"0\",\n            idunit_measure_fuel_tank: \"0\",\n            note: \"\",\n          };\n        },\n      }),\n      v(\"div\", { classes: [] }, [\n        // v(\"div\", { classes: css.favorite_checkbox }, [\n        //   w(Checkbox, {\n        //     checked: false,\n        //     aria: { describedBy: \"Predeterminado\" },\n        //     label: \"Predeterminado\",\n        //     mode: Mode.toggle,\n        //     name: \"Predeterminado\",\n        //     //onLabel: 'Si',\n        //     //offLabel: 'No',\n        //     onValue: (value: string, checked: boolean) => {\n        //       if (Number(this.Params.idvehicle) > 0) {\n        //         this.checkbox_favorite = checked;\n        //         if (checked) {\n        //           this.favorite.preference = {\n        //             name: \"default_idvehicle\",\n        //             value: this.Params.idvehicle,\n        //           };\n        //         } else {\n        //           this.favorite.preference = {\n        //             name: \"default_idvehicle\",\n        //             value: 0,\n        //           };\n        //         }\n        //         this.invalidate();\n        //       } else {\n        //         this.SnackBar(\"Debe primero guardar el vehículo\");\n        //       }\n        //     },\n        //   }),\n        // ]),\n        v(\"div\", { classes: [] }, [\n          /* w(\n            SelectFromURL,\n            {\n              label: \"Propietario\",\n              value: this.Params.idcontact,\n              url: \"/toselect/contacts\",\n              onSelect: (label, value, disabled) => {\n                console.log(\"onSelect\", label, value, disabled);\n                this.Params.idcontact = value;\n              },\n            },\n            []\n          ), */\n        ]),\n        v(\"div\", { classes: [] }, [\n          v(\"div\", { classes: [] }, [\n            w(\n              TextInput,\n              {\n                type: \"text\",\n\n                disabled: false,\n                readOnly: false,\n                required: true,\n                placeholder: \"Placa\",\n                value: this.Params.license_plate,\n                onValue: (d) => {\n                  this.Params.license_plate = d as string;\n                  this.invalidate();\n                },\n              },\n              [{ label: \"Placa\" }]\n            ),\n          ]),\n          v(\"div\", { classes: [] }, [\n            /* w(\n              SelectFromURL,\n              {\n                label: \"Marca\",\n                value: this.Params.idmark,\n                url: \"/toselect/marks\",\n                onSelect: (label, value, disabled) => {\n                  console.log(\"onSelect\", label, value, disabled);\n                  this.Params.idmark = value;\n                },\n              },\n              []\n            ), */\n          ]),\n        ]),\n        /*v('div',{ classes: [css.entrada] }, [\n\t\t\t\t\tw(SelectFromURL, {label: 'Modelo', value: this.Params.idmodel, url: '/toselect/models',\n\t\t\t\t\t\tonSelect:(label, value, disabled)=>{\n\t\t\t\t\t\t\tconsole.log('onSelect', label, value, disabled);\n\t\t\t\t\t\t\tthis.Params.idfuel_tank_capacitytype = value;\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}, []),\n\t\t\t\t\t]\n\t\t\t\t\t),\t\t\n\t\t\t\t\t*/\n        v(\"div\", { classes: []}, [\n          v(\"div\", { classes: [] }, [\n            w(\n              TextInput,\n              {\n                type: \"number\",\n                \n                disabled: false,\n                readOnly: false,\n                value: this.Params.year as any,\n                onValue: (v) => {\n                  this.Params.year = v as string;\n                  this.invalidate();\n                },\n              },\n              [{label: \"Año\"}]\n            ),\n          ]),\n          v(\"div\", { classes: [] }, [\n            w(\n              TextInput,\n              {\n                type: \"text\",\n                \n                disabled: false,\n                readOnly: false,\n                value: this.Params.vin as any,\n                onValue: (v) => {\n                  this.Params.vin = v as string;\n                  this.invalidate();\n                },\n              },\n              [{label: \"VIN\"}]\n            ),\n          ]),\n        ]),\n        v(\"div\", { classes: ''}, [\n          v(\"div\", { classes: [] }, [\n            /* w(\n              SelectFromURL,\n              {\n                label: \"Color\",\n                url: \"/toselect/colors\",\n                value: this.Params.idcolor,\n                onSelect: (label, value, disabled) => {\n                  console.log(\"onSelect\", label, value, disabled);\n                  this.Params.idcolor = value;\n                },\n              },\n              []\n            ), */\n          ]),\n          v(\"div\", { classes: [] }, [\n            /* w(\n              SelectFromURL,\n              {\n                label: \"Tipo de combustible\",\n                url: \"/toselect/fueltypes\",\n                value: this.Params.idfueltype,\n                onSelect: (label, value, disabled) => {\n                  console.log(\"onSelect\", label, value, disabled);\n                  this.Params.idfueltype = value;\n                },\n              },\n              []\n            ), */\n          ]),\n        ]),\n        v(\"div\", { classes: ''}, [\n          v(\"div\", { classes: [] }, [\n            w(\n              TextInput,\n              {\n                key: \"t6\",\n                type: \"number\",\n                \n                disabled: false,\n                readOnly: false,\n                value: this.Params.fuel_tank_capacity as any,\n                onValue: (v) => {\n                  this.Params.fuel_tank_capacity = v as string;\n                  this.invalidate();\n                },\n              },\n              [{label: \"Capacidad del tanque\"}]\n            ),\n          ]),\n          v(\"div\", { classes: [] }, [\n            /* w(\n              SelectFromURL,\n              {\n                label: \"Unidad de medida del tanque\",\n                url: \"/toselect/unit_measure_fuel_tanks\",\n                value: this.Params.idunit_measure_fuel_tank,\n                onSelect: (label, value, disabled) => {\n                  console.log(\"onSelect\", label, value, disabled);\n                  this.Params.idunit_measure_fuel_tank = value;\n                },\n              },\n              []\n            ), */\n          ]),\n        ]),\n        v(\"div\", { classes: [''] }, [\n          w(Textarea, {\n            columns: 40,\n            rows: 5,\n            placeholder: \"Notas\",\n            \n            key: \"text-area\",\n            value: this.Params.note,\n            onValue: (value: string) => {\n              this.Params.note = value;\n              this.invalidate();\n            },\n          }),\n        ]),\n        /* w(SBar, {\n          open: this._openSnack,\n          leading: false,\n          type: \"error\",\n          messageRenderer: () => this._MsgSnackBar,\n        }), */\n      ]),\n    ]);\n  }\n}\n"],"sourceRoot":""}